name: umbrella-redcases
on:
  pull_request: { branches: [ "main" ] }
  workflow_dispatch: {}

jobs:
  redcases:
    runs-on: ubuntu-latest
    env:
      SHA: ${{ github.event.pull_request.head.sha || github.sha }}
      REPO: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v4
        with: { version: 'v3.14.4' }

      - name: Cases
        id: cases
        run: |
          run_case () {
            local f="$1"; local case="$2"
            set +e
            helm template imu helm/umbrella -n prod \
              -f helm/umbrella/values.yaml -f helm/umbrella/values.prod.yaml \
              -f "tests/redcases/${f}" >/dev/null
            local rc=$?
            set -e
            echo "${case}:${rc}" >> cases.out
            [[ $rc -ne 0 ]] && echo "${case} FAILED as expected" || (echo "EXPECTED FAILURE: ${case}"; exit 1)
          }
          run_case values.bad-ingress-no-tls.yaml no_tls
          run_case values.bad-ingress-disallowed-class.yaml bad_class
          run_case values.bad-externaldns-off.yaml extdns_off
          run_case values.bad-certmanager-no-email.yaml cm_no_email
          run_case values.bad-ingress-missing-externaldns-annotation.yaml missing_extdns_annotation
          run_case values.bad-externaldns-disallowed-zone.yaml disallowed_zone
          run_case values.bad-ingress-host-outside-zone.yaml host_outside_zone
          cat cases.out

      - name: Push metrics/logs
        if: always()
        env:
          PUSHGATEWAY_URL: ${{ secrets.PUSHGATEWAY_URL }}
          LOKI_URL: ${{ secrets.LOKI_URL }}
          SHA: ${{ env.SHA }}
          REPO: ${{ env.REPO }}
        run: |
          chmod +x scripts/ci_metrics.sh
          while IFS= read -r line; do
            case="${line%%:*}"; rc="${line##*:}"
            status=$([ "$rc" -ne 0 ] && echo "pass" || echo "fail")
            ./scripts/ci_metrics.sh metric redcases "repo=${REPO},sha=${SHA},case=${case}" imu_redcase_ok $([ "$rc" -ne 0 ] && echo 1 || echo 0)
            ./scripts/ci_metrics.sh log "job=redcases,repo=${REPO},sha=${SHA},case=${case},status=${status}" "redcase ${case} -> ${status} (rc=${rc})"
          done < cases.out || true