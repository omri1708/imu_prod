# imu_repo/grounded/trust.py
from __future__ import annotations
from typing import Dict, Any

CLASSES = {
    "official": 0.99,   # gov/edu/certified
    "scholarly": 0.9,   # peer-reviewed
    "news": 0.7,
    "wiki": 0.6,
    "user": 0.4,
    "internal": 0.95    # generated by our verified pipeline
}

def classify_source(url: str) -> str:
    u = (url or "").lower()
    if u.startswith("internal.test://"): return "internal"
    if any(u.endswith(x) for x in [".gov",".gov/"]) or ".gov/" in u: return "official"
    if any(u.endswith(x) for x in [".edu",".ac.il",".ac.uk"]): return "scholarly"
    if "wikipedia.org" in u: return "wiki"
    if any(s in u for s in ["reuters","apnews","bbc.","nytimes","wsj","theguardian","haaretz"]): return "news"
    return "user"

def trust_score(label: str) -> float:
    return CLASSES.get(label, 0.4)

def meets_threshold(url: str, min_trust: float) -> bool:
    return trust_score(classify_source(url)) >= float(min_trust)
