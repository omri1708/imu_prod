{{- if .Values.externalSecrets.enabled }}
{{- $prov := .Values.secrets.provider | default "aws" }}
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: imu-secrets-store
spec:
{{- if eq $prov "aws" }}
  provider:
    aws:
      service: SecretsManager
      region: {{ .Values.secrets.aws.region | quote }}
      auth:
      {{- if .Values.secrets.aws.auth.useIRSA }}
        jwt:
          serviceAccountRef:
            name: external-secrets-sa
            namespace: external-secrets
      {{- else }}
        secretRef:
          accessKeyIDSecretRef:
            name: {{ .Values.secrets.aws.auth.secretRef | quote }}
            key: AWS_ACCESS_KEY_ID
            namespace: {{ .Values.secrets.namespace | default "default" }}
          secretAccessKeySecretRef:
            name: {{ .Values.secrets.aws.auth.secretRef | quote }}
            key: AWS_SECRET_ACCESS_KEY
            namespace: {{ .Values.secrets.namespace | default "default" }}
      {{- end }}
{{- else if eq $prov "gcp" }}
  provider:
    gcpsm:
      projectID: {{ .Values.secrets.gcp.projectId | quote }}
      auth:
      {{- if .Values.secrets.gcp.auth.useWorkloadIdentity }}
        workloadIdentity:
          clusterLocation: ""
          clusterName: ""
          projectID: {{ .Values.secrets.gcp.projectId | quote }}
      {{- else }}
        secretRef:
          secretAccessKeySecretRef:
            name: "gcp-sa"
            key: "service-account.json"
            namespace: {{ .Values.secrets.namespace | default "default" }}
      {{- end }}
{{- else if eq $prov "azure" }}
  provider:
    azurekv:
      tenantId: {{ .Values.secrets.azure.tenantId | quote }}
      vaultUrl: https://{{ .Values.secrets.azure.vaultName }}.vault.azure.net/
      authType: {{ ternary "ManagedIdentity" "WorkloadIdentity" .Values.secrets.azure.auth.useMI }}
{{- end }}
{{- end }}