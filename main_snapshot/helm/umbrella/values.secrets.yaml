externalSecrets:
  enabled: true

secrets:
  provider: aws # aws|gcp|azure
  namespace: "prod"  # היכן ייווצרו ה-Secrets (בד"כ namespace של Umbrella/Prod)

  # הגדרות ספק
  aws:
    region: "eu-west-1"
    auth:
      # אפשר אחד: IRSA (מומלץ), או accessKey/secretKey כ-Secret חיצוני
      useIRSA: true
      secretRef: ""  # אם לא IRSA: שם Secret שמחזיק AWS_ACCESS_KEY_ID/SECRET_ACCESS_KEY
  gcp:
    projectId: "my-gcp-project"
    auth:
      useWorkloadIdentity: true
      saEmail: ""  # אם צריך SA JSON, ספק ClusterSecretStore נפרד
  azure:
    tenantId: ""
    vaultName: ""
    auth:
      useMI: true  # Managed Identity

  # מיפוי שמות סוד בענן → שם Secret ב-k8s + מפתח
  items:
    - name: "alerts-slack"       # Secret K8s
      remoteKey: "/imu/prod/alerts/slackWebhook" # מפתח בענן
      property: ""  # אם JSON, ציין property
      template:
        type: Opaque
        data:
          webhook: "{{ .slackWebhook | toString }}"
    - name: "alerts-teams"
      remoteKey: "/imu/prod/alerts/teamsWebhook"
      template:
        type: Opaque
        data:
          webhook: "{{ .teamsWebhook | toString }}"
    - name: "alerts-email"
      remoteKey: "/imu/prod/alerts/email" # JSON בגורם חיצוני: {to,from,smarthost,authUsername,authPassword}
      template:
        type: Opaque
        data:
          to: "{{ .to | toString }}"
          from: "{{ .from | toString }}"
          smarthost: "{{ .smarthost | toString }}"
          authUsername: "{{ .authUsername | toString }}"
          authPassword: "{{ .authPassword | toString }}"
    - name: "alerts-pagerduty"
      remoteKey: "/imu/prod/alerts/pagerduty"
      template:
        type: Opaque
        data:
          routingKey: "{{ .routingKey | toString }}"
    - name: "alerts-opsgenie"
      remoteKey: "/imu/prod/alerts/opsgenie"
      template:
        type: Opaque
        data:
          apiKey: "{{ .apiKey | toString }}"