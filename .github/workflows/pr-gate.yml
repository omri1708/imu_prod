name: pr-gate
on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Python tests
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: |
          python -m pip install -U pip
          pip install fastapi uvicorn pydantic websockets cryptography pyyaml pytest
          pytest -q

      - name: Helm lint
        uses: azure/setup-helm@v4
        with: { version: 'v3.14.4' }
      - run: |
          helm lint helm/control-plane
          helm lint helm/generated || true

      - name: Kubeconform validate templates
        run: |
          curl -sSLO https://github.com/yannh/kubeconform/releases/download/v0.6.7/kubeconform-linux-amd64.tar.gz
          tar xzf kubeconform-linux-amd64.tar.gz kubeconform
          helm template imu helm/control-plane -n default | ./kubeconform -strict -summary -ignore-missing-schemas

      - name: Conftest (OPA) policy check
        run: |
          curl -sSLo conftest.tar.gz https://github.com/open-policy-agent/conftest/releases/download/v0.53.0/conftest_0.53.0_Linux_x86_64.tar.gz
          tar xzf conftest.tar.gz conftest && chmod +x conftest
          # דוגמה: אוכפים שלכל Namespace יש label team (אם רינדור chart יוצר NSים)
          echo 'package k8s.requiredlabel
          deny[msg] {
            input.kind == "Namespace"
            not input.metadata.labels.team
            msg := "namespace missing label: team"
          }' > policy/rego/ns_required_label.rego
          helm template imu helm/control-plane -n default > rendered.yaml
          ./conftest test rendered.yaml -p policy/rego